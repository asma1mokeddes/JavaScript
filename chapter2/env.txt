// Les principaux environnements d'exécution du JavaScript :
L'exécution du JavaScript s'effectue dans deux environnements principalement : dans un navigateur ou avec Node.js.

1 > Navigateur :
    Dans un navigateur, chaque onglet du navigateur a son environnement d'exécution pour le JavaScript de la page visitée.
    Chaque environnement d'exécution utilise le moteur JavaScript du navigateur, par exemple V8 pour Chrome, Edge

2 > Node.js :
    Node.js est un environnement serveur permettant d'exécuter du JavaScript côté serveur.
    
// Qu'est-ce que Babel ?
    Babel est un transpilateur JavaScript.
    - Il permet de transpiler du JavaScript très récent en JavaScript plus ancien pour qu'il soit compatible sur toutes 
    les versions des navigateurs ciblées par l'équipe de développement du projet.

// Comment exectuer de l'ES6 ou ultérieur ?
-> on utilise des transpillers ou compilateurs (esbuild, babel, browserify et swc) : transformer du code js next-gen (récent) en js
multi-plateformes (n'importe quelle version)

// Comment ça marche ?
Parser : transformer un code en AST (un arbre syntaxique)
Transpileur : AST en AST (on transforme l'arbre : exemple switch transformé en if, une classe en fonction etc).
Generator : AST en Code (transformer l'arbre en code)


// Gestionnaires de paquets : 
C'est un ensemble d'outils qui permet d'automatiser l'installation, la mise à niveau, la configuration et l'utilisation des logiciels. 

    // NPM :
    - Gestion automatique des dépendances (c'est le gestionnaire de paquets officiel de Node.js. Il est installé par défaut lorsque on install Node.js).
  
    // YARN :
    - Mode Hors-ligne
    - Meilleur gestion des dépendances
    - Plus sécurisé


    // BOWER (paquets pour le web mais il est mort maintenant):
    - Gestion manuelle des dépendances